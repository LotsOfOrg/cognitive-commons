# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/cognitive-commons',
                'doc_host': 'https://LotsOfOrg.github.io',
                'git_url': 'https://github.com/LotsOfOrg/cognitive-commons',
                'lib_path': 'cognitive_commons'},
  'syms': { 'cognitive_commons.core': {'cognitive_commons.core.foo': ('core.html#foo', 'cognitive_commons/core.py')},
            'cognitive_commons.data': { 'cognitive_commons.data.ContentProvenance': ( 'data.html#contentprovenance',
                                                                                      'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentProvenance.__init__': ( 'data.html#contentprovenance.__init__',
                                                                                               'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentProvenance.calculate_impact_score': ( 'data.html#contentprovenance.calculate_impact_score',
                                                                                                             'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentProvenance.record_usage': ( 'data.html#contentprovenance.record_usage',
                                                                                                   'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentStore': ('data.html#contentstore', 'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentStore.__init__': ( 'data.html#contentstore.__init__',
                                                                                          'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentStore._load_index': ( 'data.html#contentstore._load_index',
                                                                                             'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentStore._save_index': ( 'data.html#contentstore._save_index',
                                                                                             'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentStore.add_content': ( 'data.html#contentstore.add_content',
                                                                                             'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentStore.get_content': ( 'data.html#contentstore.get_content',
                                                                                             'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentStore.get_metadata': ( 'data.html#contentstore.get_metadata',
                                                                                              'cognitive_commons/data.py'),
                                        'cognitive_commons.data.ContentStore.record_usage': ( 'data.html#contentstore.record_usage',
                                                                                              'cognitive_commons/data.py'),
                                        'cognitive_commons.data.DataQualityChecker': ( 'data.html#dataqualitychecker',
                                                                                       'cognitive_commons/data.py'),
                                        'cognitive_commons.data.DataQualityChecker.__init__': ( 'data.html#dataqualitychecker.__init__',
                                                                                                'cognitive_commons/data.py'),
                                        'cognitive_commons.data.DataQualityChecker.calculate_quality_score': ( 'data.html#dataqualitychecker.calculate_quality_score',
                                                                                                               'cognitive_commons/data.py'),
                                        'cognitive_commons.data.DataQualityChecker.check_basic_quality': ( 'data.html#dataqualitychecker.check_basic_quality',
                                                                                                           'cognitive_commons/data.py'),
                                        'cognitive_commons.data.DataQualityChecker.is_acceptable': ( 'data.html#dataqualitychecker.is_acceptable',
                                                                                                     'cognitive_commons/data.py')},
            'cognitive_commons.evaluation': { 'cognitive_commons.evaluation.foo': ( 'evaluation.html#foo',
                                                                                    'cognitive_commons/evaluation.py')},
            'cognitive_commons.inference': {'cognitive_commons.inference.foo': ('inference.html#foo', 'cognitive_commons/inference.py')},
            'cognitive_commons.integration_tests': { 'cognitive_commons.integration_tests.foo': ( 'integration_tests.html#foo',
                                                                                                  'cognitive_commons/integration_tests.py')},
            'cognitive_commons.model': {'cognitive_commons.model.foo': ('model.html#foo', 'cognitive_commons/model.py')}}}
